<div class="faq-wrapper-accordion" id="faq-wrapper-accordion">
    {% render "basic-faq" %}
</div>




{% comment %} <details>
  <summary><h2 id="accordion-title">
Loading...
  {% if block.settings.selectedIcon == "icon-arrow" %}
      {% render "icon-arrow" %}
  {% else %}
      {% render "icon-arrow-circle" %}
  {% endif %}

</h2></summary>
  <p id="accordion-desc"></p>
</details> {% endcomment %}



<input type="hidden" id="shopD" value="{{ shop }}" />
<input type="hidden" id="permanentUrl" value="{{ shop.permanent_domain }}" />
<input type="hidden" id="faqShortcode" value="{{ block.settings.shortcode }}" />

<script>
  // Accessing Liquid variables in JavaScript
  let available_ids = [];



  // Modify the DOM based on the dynamic content
  document.addEventListener('DOMContentLoaded', async function() {
    console.log("Shop Details", jQuery("#shopD").val());
    console.log("Shop Details 2", jQuery("#permanentUrl").val());
    const shopPermanentUrl = jQuery("#permanentUrl").val();

        const faqShortcode =  document.querySelector("#faqShortcode");

        const response = await fetch(`https://${shopPermanentUrl}/apps/faq-anywhere-proxy/available-groups-id`);
        available_ids = await response.json();

        // If anything exits from the merchant end
        if(faqShortcode.value !== '') {
            if(available_ids.includes(Number(faqShortcode.value))){
                const groupResponse = await fetch(`https://${shopPermanentUrl}/apps/faq-anywhere-proxy/group/${faqShortcode.value}`);
                const ourValidGroupInfo = await groupResponse.json();
                document.getElementById("faq-master-title").textContent = ourValidGroupInfo.name;
                let itemsHtml = '';

                const mainAccordionDivItem = document.querySelector("#faq-accordion .accordion-item");

                jQuery("#faq-accordion").empty();
                let html = '';

                ourValidGroupInfo?.faqs?.map((faq, index) => {
                    const newAccordionDivItem = mainAccordionDivItem.cloneNode(true);
                    // jQuery(newAccordionDivItem).find('#faq-accordion-title').html(`${faq.question}`);
                    newAccordionDivItem.querySelector('#faq-accordion-title').innerHTML = `${faq.question}`;
                    // jQuery(newAccordionDivItem).find('#faq-accordion-content').html(`<p>${faq.answer}</p>`);
                    newAccordionDivItem.querySelector('#faq-accordion-content').innerHTML = `<p>${faq.answer}</p>`;
                    document.querySelector("#faq-accordion").appendChild(newAccordionDivItem);

                    return null;
                });
                jQuery("#faqLoadingGroupTitle").hide();
            } else {
                jQuery("#faq-accordion-item").hide();
                jQuery("#faqLoadingGroupTitle").show();
            }
        }

        faqShortcode.addEventListener('change', function(event) {
            // Check if the pressed key is Enter (key code 13)
            console.log(event.target.value);
        });
  });
</script>

{% schema %}
{
  "name": "Faq",
  "target": "section",
  "javascript": "jquery.min.js",
  "settings": [
    {
      "type": "header",
      "content": "Icon Dropdown Configuration"
    },
    {
      "type": "select",
      "label": "Select Icon",
      "id": "selectedIcon",
      "options": [
        {
          "value": "icon-arrow",
          "label": "Arrow Icon Down"
        },
        {
          "value": "icon-arrow-circle",
          "label": "Arrow Icon Down Circle"
        }
      ],
      "default": "icon-arrow",
      "info": "Choose a dropdown icon."
    },
    {
      "type": "text",
      "label": "Faq Shortcode",
      "id": "shortcode"
    }
  ]
}
{% endschema %}

